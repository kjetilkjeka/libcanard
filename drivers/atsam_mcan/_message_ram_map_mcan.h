#include "canard_mcan.h"
#include "canard.h"

#ifndef _REG_MAP_MCAN_MESSAGE_RAM1_H_
#define _REG_MAP_MCAN_MESSAGE_RAM1_H_

typedef struct {
	volatile uint32_t R0;
	volatile uint32_t R1;
	volatile uint8_t data[CANARD_MCAN_FRAME_DATA_LENGTH];
} CANARD_MCAN_MESSAGE_RX_BUFFER_ELEMENT;

typedef struct {
	volatile uint32_t T0;
	volatile uint32_t T1;
	volatile uint8_t data[CANARD_MCAN_FRAME_DATA_LENGTH];
} CANARD_MCAN_MESSAGE_TX_BUFFER_ELEMENT;

#define MCAN_MESSAGE_TX_BUFFER_T0_ID_Pos (0)
#define MCAN_MESSAGE_TX_BUFFER_T0_ID_Msk (0x1fffffffU << MCAN_MESSAGE_TX_BUFFER_T0_ID_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T0_ID(value) ((value << MCAN_MESSAGE_TX_BUFFER_T0_ID_Pos) & MCAN_MESSAGE_TX_BUFFER_T0_ID_Msk)

#define MCAN_MESSAGE_TX_BUFFER_T0_RTR_Pos (29)
#define MCAN_MESSAGE_TX_BUFFER_T0_RTR_Msk (0x1U << MCAN_MESSAGE_TX_BUFFER_T0_RTR_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T0_RTR (1 << MCAN_MESSAGE_TX_BUFFER_T0_RTR_Pos)

#define MCAN_MESSAGE_TX_BUFFER_T0_XTD_Pos (30)
#define MCAN_MESSAGE_TX_BUFFER_T0_XTD_Msk (0x1U << MCAN_MESSAGE_TX_BUFFER_T0_XTD_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T0_XTD (1 << MCAN_MESSAGE_TX_BUFFER_T0_XTD_Pos)

#define MCAN_MESSAGE_TX_BUFFER_T0_ESI_Pos (31)
#define MCAN_MESSAGE_TX_BUFFER_T0_ESI_Msk (0x1U << MCAN_MESSAGE_TX_BUFFER_T0_ESI_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T0_ESI (1 << MCAN_MESSAGE_TX_BUFFER_T0_ESI_Pos)

#define MCAN_MESSAGE_TX_BUFFER_T1_DLC_Pos (16)
#define MCAN_MESSAGE_TX_BUFFER_T1_DLC_Msk (0xFU << MCAN_MESSAGE_TX_BUFFER_T1_DLC_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T1_DLC(value) ((value << MCAN_MESSAGE_TX_BUFFER_T1_DLC_Pos) & MCAN_MESSAGE_TX_BUFFER_T1_DLC_Msk)

#define MCAN_MESSAGE_TX_BUFFER_T1_BRS_Pos (20)
#define MCAN_MESSAGE_TX_BUFFER_T1_BRS_Msk (0x1U << MCAN_MESSAGE_TX_BUFFER_T1_BRS_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T1_BRS (1 << MCAN_MESSAGE_TX_BUFFER_T1_BRS_Pos)

#define MCAN_MESSAGE_TX_BUFFER_T1_FDF_Pos (21)
#define MCAN_MESSAGE_TX_BUFFER_T1_FDF_Msk (0x1U << MCAN_MESSAGE_TX_BUFFER_T1_FDF_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T1_FDF (1 << MCAN_MESSAGE_TX_BUFFER_T1_FDF_Pos)

#define MCAN_MESSAGE_TX_BUFFER_T1_EFC_Pos (23)
#define MCAN_MESSAGE_TX_BUFFER_T1_EFC_Msk (0x1U << MCAN_MESSAGE_TX_BUFFER_T1_EFC_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T1_EFC (1 << MCAN_MESSAGE_TX_BUFFER_T1_EFC_Pos)

#define MCAN_MESSAGE_TX_BUFFER_T1_MM_Pos (24)
#define MCAN_MESSAGE_TX_BUFFER_T1_MM_Msk (0xFFU << MCAN_MESSAGE_TX_BUFFER_T1_MM_Pos)
#define MCAN_MESSAGE_TX_BUFFER_T1_MM(value) ((value << MCAN_MESSAGE_TX_BUFFER_T1_MM_Pos) & MCAN_MESSAGE_TX_BUFFER_T1_MM_Msk)


typedef struct {
	volatile uint32_t F0;
	volatile uint32_t F1;
} CANARD_MCAN_MESSAGE_EXTENDED_ID_FILTER_ELEMENT;


typedef struct {
	volatile CANARD_MCAN_MESSAGE_EXTENDED_ID_FILTER_ELEMENT extended_filters[CANARD_MCAN_EXTENDED_FILTER_BUFFER_SIZE];
	volatile CANARD_MCAN_MESSAGE_RX_BUFFER_ELEMENT rx_fifo0[CANARD_MCAN_RX_FIFO_SIZE];
	volatile CANARD_MCAN_MESSAGE_TX_BUFFER_ELEMENT tx_buffers[CANARD_MCAN_TX_BUFFER_SIZE];
} CANARD_MCAN_MESSAGE_RAM;

/* We're relying on unspecified and implementation defined behavior. Let's do some assertions to verify at least some of our assumptions. */

#if CANARD_MCAN_FD_SUPPORT
CANARD_STATIC_ASSERT(sizeof(CANARD_MCAN_MESSAGE_RX_BUFFER_ELEMENT) == 72, "Invalid memory layout (wrong size) of CANARD_MCAN_MESSAGE_RX_BUFFER_ELEMENT");
#else
CANARD_STATIC_ASSERT(sizeof(CANARD_MCAN_MESSAGE_RX_BUFFER_ELEMENT) == 16, "Invalid memory layout (wrong size) of CANARD_MCAN_MESSAGE_RX_BUFFER_ELEMENT");
#endif

#if CANARD_MCAN_FD_SUPPORT
CANARD_STATIC_ASSERT(sizeof(CANARD_MCAN_MESSAGE_TX_BUFFER_ELEMENT) == 72, "Invalid memory layout (wrong size) of CANARD_MCAN_MESSAGE_TX_BUFFER_ELEMENT");
#else
CANARD_STATIC_ASSERT(sizeof(CANARD_MCAN_MESSAGE_TX_BUFFER_ELEMENT) == 16, "Invalid memory layout (wrong size) of CANARD_MCAN_MESSAGE_TX_BUFFER_ELEMENT");
#endif

CANARD_STATIC_ASSERT(sizeof(CANARD_MCAN_MESSAGE_EXTENDED_ID_FILTER_ELEMENT) == 8, "Invalid memory layout (wrong size) of CANARD_MCAN_MESSAGE_EXTENDED_ID_FILTER_ELEMENT");




#endif /* _REG_MAP_MCAN_MESSAGE_RAM1_H_ */